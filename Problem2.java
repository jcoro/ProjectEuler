
/**
 * Problem 2 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * 
 * @author John Coronite 
 * @version 1
 */
public class Problem2 implements RunEuler {
   public static void main(String[] args) {
        System.out.println(new Problem2().run());
    }

    /**
     * Rationale: Use the fibonacci method in the Utility class to find the terms < 4 million and sum them if they are even.
     * @return String - the sum of the even-valued terms.
     */
    public String run() {
        int index = 0;
        int sum = 0;
        while (Utility.fibonacci(index) < 4000000) {
            if (Utility.fibonacci(index) % 2 == 0) {
                sum += Utility.fibonacci(index);                
            }
            index++;
        }
        return Integer.toString(sum);
    }        
}
